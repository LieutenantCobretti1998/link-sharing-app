import{g as c,f}from"./index-D7ZcxJ6c.js";const h=async s=>{const e=await fetch("/api/create_profile",{method:"POST",body:JSON.stringify({new_profile_name:s}),headers:{"Content-Type":"application/json","X-CSRF-TOKEN":c()}}),r=await e.json();if(!e.ok){if(e.status===401)if(await f()){const n=await fetch("/api/create_profile",{method:"POST",body:JSON.stringify({new_profile_name:s}),headers:{"Content-Type":"application/json","X-CSRF-TOKEN":c()}}),o=await n.json();if(!n.ok){const a=(o==null?void 0:o.message)||"Error fetching links after token refresh.";throw new Error(a)}return o}else throw new Error("Session expired. Please log in again.");throw new Error(r.message)}return r},d=async()=>{const s=await fetch("/api/related-profiles",{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}),e=await s.json();if(!s.ok){if(s.status===401)if(await f()){const t=await fetch("/api/related-profiles",{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}),n=await t.json();if(!t.ok){const o=(n==null?void 0:n.message)||"Error fetching links after token refresh.";throw new Error(o)}return n}else throw new Error("Session expired. Please log in again.");throw new Error(e.message)}return e},w=async s=>{const e=await fetch(`/api/choose_profile/${s}`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}),r=await e.json();if(!e.ok){if(e.status===401)if(await f()){const n=await fetch(`/api/choose_profile/${s}`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}),o=await n.json();if(!n.ok){const a=(o==null?void 0:o.message)||"Error fetching links after token refresh.";throw new Error(a)}return o}else throw new Error("Session expired. Please log in again.");throw new Error(r.message)}return r},g=async s=>{const e=localStorage.getItem("current-profile"),r=JSON.parse(e);if(!r)throw new Error("Profile is missed!");const t=await fetch(`/api/change-profile-name/${r.profile_id}/${r.profile_name}`,{method:"PATCH",body:JSON.stringify({new_profile_name:s}),headers:{"Content-Type":"application/json","X-CSRF-TOKEN":c()},credentials:"include"}),n=await t.json();if(!t.ok){if(t.status===401)if(await f()){const a=await fetch(`/api/change-profile-name/${r.profile_id}/${r.profile_name}`,{method:"PATCH",body:JSON.stringify({new_profile_name:s}),headers:{"Content-Type":"application/json","X-CSRF-TOKEN":c()},credentials:"include"}),i=await a.json();if(!a.ok){const l=(i==null?void 0:i.error)||"Error fetching links after token refresh.";throw new Error(l)}return i}else throw new Error("Session expired. Please log in again.");throw new Error(n.error)}return n},E=async()=>{const s=localStorage.getItem("current-profile"),e=JSON.parse(s);if(!e)throw new Error("Profile is missed!");const r=await fetch(`/api/delete-profile/${e.profile_id}/${e.profile_name}`,{method:"DELETE",headers:{"X-CSRF-TOKEN":c()},credentials:"include"}),t=await r.json();if(!r.ok){if(r.status===401)if(await f()){const o=await fetch(`/api/delete-profile/${e.profile_id}/${e.profile_name}`,{method:"DELETE",headers:{"X-CSRF-TOKEN":c()},credentials:"include"}),a=await o.json();if(!o.ok){const i=(a==null?void 0:a.error)||"Error fetching links after token refresh.";throw new Error(i)}return a}else throw new Error("Session expired. Please log in again.");throw new Error(t.error)}return t};export{d as a,h as b,w as c,E as d,g as u};
