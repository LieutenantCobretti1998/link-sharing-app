files:
  "/etc/nginx/conf.d/https.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      server {

          location / {
              proxy_pass http://127.0.0.1:8000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              # Add CORS headers
              add_header Access-Control-Allow-Origin "https://dvlinks.netlify.app" always;
              add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
              add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
              add_header Access-Control-Allow-Credentials "true" always;

              # Handle preflight OPTIONS requests
              if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://dvlinks.netlify.app" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
              }
          }
      }

container_commands:
  00_copy_certificate:
    command: "cp /var/app/staging/certs/certificate.crt /etc/pki/tls/certs/server.crt"
    leader_only: true

  01_copy_key:
    command: "cp /var/app/staging/certs/private.key /etc/pki/tls/private/server.key"
    leader_only: true

  02_set_permissions:
    command: |
      chmod 644 /etc/pki/tls/certs/server.crt
      chmod 640 /etc/pki/tls/private/server.key
      chown root:root /etc/pki/tls/certs/server.crt
      chown root:root /etc/pki/tls/private/server.key

  03_optimize_nginx:
    command: |
      if ! grep -q "types_hash_max_size" /etc/nginx/nginx.conf; then
        sed -i '/http {/a\    types_hash_max_size 2048;\n    types_hash_bucket_size 128;' /etc/nginx/nginx.conf
      fi

  04_test_nginx_config:
    command: "nginx -t"

  05_reload_nginx:
    command: "service nginx reload || (echo 'Nginx reload failed' >> /var/log/nginx/reload_errors.log)"
    leader_only: true
